SET SQL_SAFE_UPDATES = 0;
Commit;

-- Stock Split, Bonus
select * from stock_split_probability a where a.is_processed = 'YES' order by date desc;
select * from stock_split_probability a where a.is_processed != 'YES' order by date desc;
select a.* from stock_split_probability a, stock_universe b where a.ticker = b.ticker and (b.is_nse500 = 1 or b.is_bse500 = 1) and a.is_processed != 'YES' order by date desc;
-- For 1:1 Bonus update price as 1/2  (Newly Issued Stocks : Origianl Stocks)
-- FOr 1:2 Bonus update price as 2/3 and so on (i.e. Original Stocks / (sum of newly issued stocks + original stocks)
-- For 2:10 Stock Split update price as (New FV/Old FV) i.e. (2/10) or (1/5)

-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'ANANDRATHI') and (date = '2025-03-05');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 4:1' WHERE (ticker = 'JINDWORLD') and (date = '2025-02-28');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'IGL') and (date = '2025-01-31');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:2' WHERE (ticker = 'JBMA') and (date = '2025-01-31');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:10' WHERE (ticker = 'JAIBALAJI') and (date = '2025-01-17');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:10' WHERE (ticker = 'SHRIRAMFIN') and (date = '2025-01-10');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'ANUP') and (date = '2024-04-23');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:4' WHERE (ticker = 'GARFIBRES') and (date = '2025-01-03');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:2' WHERE (ticker = 'NMDC') and (date = '2024-12-27');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 5:10' WHERE (ticker = 'MAZDOCK') and (date = '2024-12-27');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'WIPRO') and (date = '2024-12-03');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'NA' WHERE (ticker = 'EASEMYTRIP') and (date = '2024-11-29');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'RELIANCE') and (date = '2024-10-28');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:5' WHERE (ticker = 'DRREDDY') and (date = '2024-10-28');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:10' WHERE (ticker = 'HEG') and (date = '2024-10-18');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:2' WHERE (ticker = 'JINDALSAW') and (date = '2024-10-09');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'NA' WHERE (ticker = 'NBCC') and (date = '2024-10-07');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:5' WHERE (ticker = 'GPIL') and (date = '2024-10-04');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'RITES') and (date = '2024-09-20');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'PHOENIXLTD') and (date = '2024-09-20');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:10' WHERE (ticker = 'KIMS') and (date = '2024-09-13');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:5' WHERE (ticker = 'VBL') and (date = '2024-09-12');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:10' WHERE (ticker = 'VSTIND') and (date = '2024-09-06');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 10:2' WHERE (ticker = 'SAPPHIRE') and (date = '2024-09-05');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'CDSL') and (date = '2024-08-23');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 10:2' WHERE (ticker = 'KSB') and (date = '2024-07-25');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:2' WHERE (ticker = 'ELECON') and (date = '2024-07-19');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:2' WHERE (ticker = 'OIL') and (date = '2024-07-02');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:2' WHERE (ticker = 'HINDPETRO') and (date = '2024-06-21');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'BPCL') and (date = '2024-06-21');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Demerger' WHERE (ticker = 'SANOFI') and (date = '2024-06-13');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 3:1' WHERE (ticker = 'MOTILALOFS') and (date = '2024-06-10');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 3:1' WHERE (ticker = 'INOXWIND') and (date = '2024-05-24');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 5:10' WHERE (ticker = 'BDL') and (date = '2024-05-24');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:10' WHERE (ticker = 'CANBK') and (date = '2024-05-15');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 5:10' WHERE (ticker = 'PERSISTENT') and (date = '2024-03-28');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'GAEL') and (date = '2024-03-15');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1, Stock Split Ratio 1:2' WHERE (ticker = 'CGCL') and (date = '2024-03-05');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 2:1' WHERE (ticker = 'MASFIN') and (date = '2024-02-22');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'News Event:Sony calls off merger' WHERE (ticker = 'ZEEL') and (date = '2024-01-23');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 5:10' WHERE (ticker = 'COCHINSHIP') and (date = '2024-01-10');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Demerger 1 NMDC : 1 NSLNISP' WHERE (ticker = 'NSLNISP') and (date = '2023-02-20');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Demerger 1 NIITLTD : 1 NIITMTS' WHERE (ticker = 'NIITLTD') and (date = '2023-06-08');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'SONATSOFTW') and (date = '2023-12-12');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:3' WHERE (ticker = 'ALLCARGO') and (date = '2024-01-02');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:10' WHERE (ticker = 'NESTLEIND') and (date = '2024-01-05');
-- INSERT INTO `timelineofwealth`.`stock_split_probability` (`ticker`, `date`, `close_price`, `previous_close_price`, `day_percent_change`, `is_processed`, `note`) VALUES ('BERGEPAINT', '2023-09-22', '669.3', '753.25', '-0.1114', 'YES', 'Bonus 1:5');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:2' WHERE (ticker = 'SAFARI') and (date = '2023-12-12');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 5:10' WHERE (ticker = 'HAL') and (date = '2023-09-28');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:2' WHERE (ticker = 'JBCHEPHARM') and (date = '2023-09-18');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:2' WHERE (ticker = 'KANSAINER') and (date = '2023-07-04');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Ignored' WHERE (ticker = 'PPLPHARMA') and (date = '2022-10-19');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Ignored' WHERE (ticker = 'PEL') and (date = '2022-08-30');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'INDIAMART') and (date = '2023-06-21');
-- INSERT INTO `timelineofwealth`.`stock_split_probability` (`ticker`, `date`, `close_price`, `previous_close_price`, `day_percent_change`, `is_processed`, `note`) VALUES ('BLUESTARCO', '2023-06-20', '790', '1524', '-0.5184', 'YES', 'Bonus 1:1');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'BLUESTARCO') and (date = '2023-06-20');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Spin off into two shares' WHERE (ticker = 'EDELWEISS') and (date = '2023-06-02');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 5:10' WHERE (ticker = 'VBL') and (date = '2023-06-15');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'LODHA') and (date = '2023-05-31');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:4' WHERE (ticker = 'SPLPETRO') and (date = '2023-01-06');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'BLS') and (date = '2022-12-08');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'BLS') and (date = '2022-05-13');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:2 & Bonus 1:1' WHERE (ticker = '360ONE') and (date = '2023-03-02');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:10' WHERE (ticker = 'IRB') and (date = '2023-02-22');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'SFL') and (date = '2022-12-21');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:5' WHERE (ticker = 'JBMA') and (date = '2022-02-21');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:10' WHERE (ticker = 'TATASTEEL') and (date = '2022-07-28');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:5 and Bonus 1:1' WHERE (ticker = 'BAJAJFINSV') and (date = '2022-09-13');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 2:10' WHERE (ticker = 'HLEGLAS') and (date = '2022-10-18');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'TORNTPHARM') and (date = '2022-07-08');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 2:1' WHERE (ticker = 'GMMPFAUDLR') and (date = '2022-07-11');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:2' WHERE (ticker = 'GAIL') and (date = '2022-09-06');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 2:1' WHERE (ticker = 'BEL') and (date = '2022-09-15');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:2' WHERE (ticker = 'MOTHERSON') and (date = '2022-10-03');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 5:1' WHERE (ticker = 'NYKAA') and (date = '2022-11-10');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Bonus 1:1' WHERE (ticker = 'EASEMYTRIP') and (date = '2022-02-28');
-- UPDATE stock_split_probability SET is_processed = 'YES', note = 'Stock Split Ratio 1:2 and Bonus 3:1' WHERE (ticker = 'EASEMYTRIP') and (date = '2022-11-21');
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:2' where ticker = 'IOC' and date = '2022-06-30';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:2' where ticker = 'RATNAMANI' and date = '2022-06-30';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'NAZARA' and date = '2022-06-24';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:2' where ticker = 'AJANTPHARM' and date = '2022-06-22';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'AUBANK' and date = '2022-06-09';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:2' where ticker = 'VBL' and date = '2022-06-06';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 1:10' where ticker = 'SAREGAMA' and date = '2022-04-26';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'JUBLFOOD' and date = '2022-04-19';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 2:3' where ticker = 'BCG' and date = '2022-03-15';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'HGS' and date = '2022-02-22';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 1:2' where ticker = 'PCBL' and date = '2022-04-11';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'VTL' and date = '2022-03-24';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 2:1' where ticker = 'BSE' and date = '2022-03-21';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'INFIBEAM' and date = '2022-03-14';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'SCHAEFFLER' and date = '2022-02-08';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 1:2' where ticker = 'IPCALAB' and date = '2022-01-10';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'REDINGTON' and date = '2021-08-18';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 2:1' where ticker = 'MAHLIFE' and date = '2021-09-14';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'APLAPOLLO' and date = '2021-09-16';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 1:10' where ticker = 'CESC' and date = '2021-09-17';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 1:5' where ticker = 'KPRMILL' and date = '2021-09-24';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'AFFLE' and date = '2021-10-07';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 4:1' where ticker = 'SRF' and date = '2021-10-13';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'IRCTC' and date = '2021-10-28';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 1:10' where ticker = 'TTKPRESTIG' and date = '2021-12-14';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 2:1' where ticker = 'IEX' and date = '2021-12-03';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'AARTIIND' and date = '2021-06-22';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:2' where ticker = 'VBL' and date = '2021-06-10';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'REDINGTON' and date = '2021-08-18';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'IRCON' and date = '2021-05-20';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:5' where ticker = 'ALKYLAMINE' and date = '2021-05-11';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'VAIBHAVGBL' and date = '2021-05-07';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'FINPIPE' and date = '2021-04-15';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:3' where ticker = 'ASTRAL' and date = '2021-03-18';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'DIXON' and date = '2021-03-18';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'INFIBEAM' and date = '2021-03-18';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'KNRCON' and date = '2021-02-03';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'VALIANTORG' and date = '2020-12-24';
-- update stock_split_probability set is_processed = 'YES', note = 'Bonus 1:1' where ticker = 'ELGIEQUIP' and date = '2020-09-24';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Split Ratio 2:10' where ticker = 'LAURUSLABS' and date = '2020-09-29';
-- update stock_split_probability set is_processed = 'YES', note = 'No Data Found' where ticker = 'M&MFIN' and date = '2020-08-24';
-- update stock_split_probability set is_processed = 'YES', note = 'Right Issue 1:1' where is_processed = 'NO' and ticker = 'M&MFIN' and date = '2020-07-22';
-- update stock_split_probability set is_processed = 'YES', note = 'Stock Crashed' where ticker = JETAIRWAYS' and date = '2019-06-18';
-- update rest of the stocks as ignored
-- update stock_split_probability set is_processed = 'YES', note = 'Ignored' where is_processed = 'NO' and ticker not in (select ticker from stock_universe where is_nse500 = 1 or is_bse500 = 1);

SELECT date, close_price, a.* from nse_price_history a where a.nse_ticker = 'ANUP' and date <= '2024-04-23' order by date desc;
SELECT date, close_price from bse_price_history a where a.bse_ticker = '000000' and date <= '2019-12-05' order by date desc;
select * from stock_price_movement_history a where a.ticker = 'TTKPRESTIG' and date >= '2021-12-14';
SELECT * from wealth_details a where ticker = 'SAFARI';
SELECT * from portfolio_holdings a where ticker = 'SAFARI';

/*
update portfolio_holdings set quantity = quantity * 2, rate = rate * (1/2), net_rate = net_rate * (1/2) where ticker = 'SAFARI';
update portfolio_holdings set quantity = quantity * 2, rate = rate * (1/2), net_rate = net_rate * (1/2) where ticker = 'BLUESTARCO';
update portfolio_holdings set quantity = quantity * 5, rate = rate * (1/5), net_rate = net_rate * (1/5) where ticker = 'DIXON';

update wealth_details set quantity = quantity * 2, rate = rate * (1/2), net_rate = net_rate * (1/2) where ticker = 'RELAXO';
update portfolio_holdings set quantity = quantity * 2, rate = rate * (1/2), net_rate = net_rate * (1/2) where ticker = 'RELAXO';

-- Copy this below and then replace ticker XXX to right one and replace date and most imp. replace fraction
update nse_price_history a set close_price = close_price * ( 1 / 1	) where a.nse_ticker = 'XXX' and date < 'XXXX-XX-XX' ;

update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'ANANDRATHI' and date < '2025-03-05' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'JINDWORLD' and date < '2025-02-28' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'IGL' and date < '2025-01-31' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'JBMA' and date < '2025-01-31' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'JAIBALAJI' and date < '2025-01-17' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'SHRIRAMFIN' and date < '2025-01-10' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'ANUP' and date < '2024-04-23' ;
update nse_price_history a set close_price = close_price * ( 1 / 5 ) where a.nse_ticker = 'GARFIBRES' and date < '2025-01-03' ;
update nse_price_history a set close_price = close_price * ( 1 / 3 ) where a.nse_ticker = 'NMDC' and date < '2024-12-27' ;
update nse_price_history a set close_price = close_price * ( 5 /  10 ) where a.nse_ticker = 'MAZDOCK' and date < '2024-12-27' ;
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'WIPRO' and date < '2024-12-03' ;
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'RELIANCE' and date < '2024-10-28' ;
update nse_price_history a set close_price = close_price * ( 1 /  5 ) where a.nse_ticker = 'DRREDDY' and date < '2024-10-28' ;
update nse_price_history a set close_price = close_price * ( 2 /  10 ) where a.nse_ticker = 'HEG' and date < '2024-10-18' ;
update nse_price_history a set close_price = close_price * ( 1 /  2 ) where a.nse_ticker = 'JINDALSAW' and date < '2024-10-09' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'GPIL' and date < '2024-10-04' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'RITES' and date < '2024-09-20' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'PHOENIXLTD' and date < '2024-09-20' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'KIMS' and date < '2024-09-13' ;
update nse_price_history a set close_price = close_price * ( 2 / 5	) where a.nse_ticker = 'VBL' and date < '2024-09-12' ;
update nse_price_history a set close_price = close_price * ( 1 / 10	) where a.nse_ticker = 'VSTIND' and date < '2024-09-06' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'SAPPHIRE' and date < '2024-09-05' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'CDSL' and date < '2024-08-23' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'KSB' and date < '2024-07-25' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'ELECON' and date < '2024-07-19' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'OIL' and date < '2024-07-02' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'HINDPETRO' and date < '2024-06-21' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'BPCL' and date < '2024-06-21' ;
update nse_price_history a set close_price = close_price * ( 1 / 1	) where a.nse_ticker = 'SANOFI' and date < '2024-06-13' ;
update nse_price_history a set close_price = close_price * ( 1 / 4	) where a.nse_ticker = 'MOTILALOFS' and date < '2024-06-10' ;
update nse_price_history a set close_price = close_price * ( 1 / 4	) where a.nse_ticker = 'INOXWIND' and date < '2024-05-24' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'BDL' and date < '2024-05-24' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'CANBK' and date < '2024-05-15' ;
update nse_price_history a set close_price = close_price * ( 5 / 10	) where a.nse_ticker = 'PERSISTENT' and date < '2024-03-28' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'GAEL' and date < '2024-03-15' ;
update nse_price_history a set close_price = close_price * ( 1 / 4	) where a.nse_ticker = 'CGCL' and date < '2024-03-05' ;
update nse_price_history a set close_price = close_price * ( 1 / 3	) where a.nse_ticker = 'MASFIN' and date < '2024-02-22' ;
update nse_price_history a set close_price = close_price * ( 5 / 10	) where a.nse_ticker = 'COCHINSHIP' and date < '2024-01-10' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'SONATSOFTW' and date < '2023-12-12' ;
update nse_price_history a set close_price = close_price * ( 1 / 4	) where a.nse_ticker = 'ALLCARGO' and date < '2024-01-02' ;
update nse_price_history a set close_price = close_price * ( 1 / 10	) where a.nse_ticker = 'NESTLEIND' and date < '2024-01-05';
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'SAFARI' and date < '2023-12-12' ;
update nse_price_history a set close_price = close_price * ( 5 / 6	) where a.nse_ticker = 'BERGEPAINT' and date < '2023-09-22' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'HAL' and date < '2023-09-28' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'JBCHEPHARM' and date < '2023-09-18' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'KANSAINER' and date < '2023-07-04' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'INDIAMART' and date < '2023-06-21' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'BLUESTARCO' and date < '2023-06-20' ;
update nse_price_history a set close_price = close_price * ( 5 / 10	) where a.nse_ticker = 'VBL' and date < '2023-06-15' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'LODHA' and date < '2023-05-31' ;
update nse_price_history a set close_price = close_price * ( 2 / 4	) where a.nse_ticker = 'SPLPETRO' and date < '2023-01-06' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'BLS' and date < '2022-12-08' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'BLS' and date < '2022-05-13' ;
update nse_price_history a set close_price = close_price * ( 1 / 10	) where a.nse_ticker = 'IRB' and date < '2023-02-22' ;
update nse_price_history a set close_price = close_price * ( 1 / 4	) where a.nse_ticker = '360ONE' and date < '2023-03-02' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'SFL' and date < '2022-12-21' ;
update nse_price_history a set close_price = close_price * ( 1 / 8	) where a.nse_ticker = 'EASEMYTRIP' and date < '2022-11-21' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'EASEMYTRIP' and date < '2022-02-28' ;
update nse_price_history a set close_price = close_price * ( 2 / 10	) where a.nse_ticker = 'HLEGLAS' and date < '2022-10-18' ;
update nse_price_history a set close_price = close_price * ( 1 / 10	) where a.nse_ticker = 'BAJAJFINSV' and date < '2022-09-13' ;
update nse_price_history a set close_price = close_price * ( 1 / 10	) where a.nse_ticker = 'TATASTEEL' and date < '2022-07-28' ;
update nse_price_history a set close_price = close_price * ( 2 / 5	) where a.nse_ticker = 'JBMA' and date < '2022-02-21' ;
update nse_price_history a set close_price = close_price * ( 1 / 6	) where a.nse_ticker = 'NYKAA' and date < '2022-11-10' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'MOTHERSON' and date < '2022-10-03' ;
update nse_price_history a set close_price = close_price * ( 1 / 3	) where a.nse_ticker = 'BEL' and date < '2022-09-15' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'GAIL' and date < '2022-09-06' ;
update nse_price_history a set close_price = close_price * ( 1 / 3	) where a.nse_ticker = 'GMMPFAUDLR' and date < '2022-07-11' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'TORNTPHARM' and date < '2022-07-08' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'IOC' and date < '2022-06-30' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'RATNAMANI' and date < '2022-06-30' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'NAZARA' and date < '2022-06-24' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'AJANTPHARM' and date < '2022-06-22' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'AUBANK' and date < '2022-06-09' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'VBL' and date < '2022-06-06' ;
update nse_price_history a set close_price = close_price * ( 1 / 10	) where a.nse_ticker = 'SAREGAMA' and date < '2022-04-26' ;
update nse_price_history a set close_price = close_price * ( 2 / 10	) where a.nse_ticker = 'JUBLFOOD' and date < '2022-04-19' ;
update nse_price_history a set close_price = close_price * ( 3 / 5	) where a.nse_ticker = 'BCG' and date < '2022-03-15' ;
update nse_price_history a set close_price = close_price * ( 1 / 2) where a.nse_ticker = 'HGS' and date < '2022-02-22' ;
update nse_price_history a set close_price = close_price * ( 1 / 2) where a.nse_ticker = 'PCBL' and date < '2022-04-11' ;
update nse_price_history a set close_price = close_price * ( 2 / 10) where a.nse_ticker = 'VTL' and date < '2022-03-24' ;
update nse_price_history a set close_price = close_price * ( 1 / 3) where a.nse_ticker = 'BSE' and date < '2022-03-21' ;
update nse_price_history a set close_price = close_price * ( 1 / 2) where a.nse_ticker = 'INFIBEAM' and date < '2022-03-14' ;
update nse_price_history a set close_price = close_price * ( 2 / 10) where a.nse_ticker = 'SCHAEFFLER' and date < '2022-02-08' ;
update nse_price_history a set close_price = close_price * ( 1 / 2) where a.nse_ticker = 'IPCALAB' and date < '2022-01-10' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'REDINGTON' and date < '2021-08-18' ;
update nse_price_history a set close_price = close_price * ( 1 / 3	) where a.nse_ticker = 'MAHLIFE' and date < '2021-09-14' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'APLAPOLLO' and date < '2021-09-16' ;
update nse_price_history a set close_price = close_price * ( 1 / 10	) where a.nse_ticker = 'CESC' and date < '2021-09-17' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'KPRMILL' and date < '2021-09-24' ;
update nse_price_history a set close_price = close_price * ( 2 / 10	) where a.nse_ticker = 'AFFLE' and date < '2021-10-07' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'SRF' and date < '2021-10-13' ;
update nse_price_history a set close_price = close_price * ( 2 / 10	) where a.nse_ticker = 'IRCTC' and date < '2021-10-28' ;
update nse_price_history a set close_price = close_price * ( 1 / 10	) where a.nse_ticker = 'TTKPRESTIG' and date < '2021-12-14' ;
update nse_price_history a set close_price = close_price * ( 1 / 3	) where a.nse_ticker = 'IEX' and date < '2021-12-03' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'INFIBEAM' and date < '2021-03-18' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'KNRCON' and date < '2021-02-03' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'VALIANTORG' and date < '2020-12-24' ;
update nse_price_history a set close_price = close_price * ( 3 / 4	) where a.nse_ticker = 'ASTRAL' and date < '2021-03-18' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'FINPIPE' and date < '2021-04-15' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'VAIBHAVGBL' and date < '2021-05-07' ;
update nse_price_history a set close_price = close_price * ( 2 / 5	) where a.nse_ticker = 'ALKYLAMINE' and date < '2021-05-11' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'IRCON' and date < '2021-05-20' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'REDINGTON' and date < '2021-08-18' ;
update nse_price_history a set close_price = close_price * ( 2 / 3	) where a.nse_ticker = 'VBL' and date < '2021-06-10';
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'AARTIIND' and date < '2021-06-22' ;
update nse_price_history a set close_price = close_price * ( 1 / 5	) where a.nse_ticker = 'DIXON'	 and date < '2021-03-18' ;
update nse_price_history a set close_price = close_price * ( 2 / 10	) where a.nse_ticker = 'APLAPOLLO'	 and date < '2020-12-15' ;
update nse_price_history a set close_price = close_price * ( 2 / 10	) where a.nse_ticker = 'LAURUSLABS'	 and date < '2020-09-29' ;
update nse_price_history a set close_price = close_price * ( 1 / 2	) where a.nse_ticker = 'ELGIEQUIP'	 and date < '2020-09-24' ;
update nse_price_history a set close_price = close_price * ( 1 / 10 ) where a.nse_ticker = 'EICHERMOT'  and date < '2020-08-24';
update nse_price_history a set close_price = close_price * ( 2 / 10 ) where a.nse_ticker = 'IRCON'  and date < '2020-04-03';
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'VINATIORGA' and date < '2020-02-05' ;
update nse_price_history a set close_price = close_price * ( 2 / 3 ) where a.nse_ticker = 'BALMLAWRIE' and date < '2019-12-26';
update nse_price_history a set close_price = close_price * ( 1 / 10 ) where a.nse_ticker = 'TRIDENT'  and date < '2019-12-13' ;
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'HCLTECH' and date < '2019-12-05' ;
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'AARTIIND' and date < '2019-09-27' ;
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'HDFCBANK' and date < '2019-09-19' ;
update nse_price_history a set close_price = close_price * ( 4 / 5 ) where a.nse_ticker = 'ASTRAL' and date < '2019-09-16' ;
update nse_price_history a set close_price = close_price * ( 2 / 3 ) where a.nse_ticker = 'BRIGADE' and date < '2019-08-28' ;
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'BHAGERIA'  and date < '2019-07-17';
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'SUMIT'  and date < '2019-07-17';
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'GAIL'  and date < '2019-07-09' ;
update nse_price_history a set close_price = close_price * ( 2 / 5 ) where a.nse_ticker = 'APCOTEXIND' and date < '2019-07-04' ;
update bse_price_history a set close_price = close_price * ( 5 / 10 ) where a.bse_ticker = '509887' and date < '2019-07-03' ;
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'AVADHSUGAR'  and date < '2019-06-27';
update nse_price_history a set close_price = close_price * ( 3 / 5 ) where a.nse_ticker = 'MITTAL'  and date < '2019-06-20' ;
update nse_price_history a set close_price = close_price * ( 1 / 2 ) where a.nse_ticker = 'CREATIVE'  and date < '2019-06-25' ;


-- Copy this below and then replace ticker XXX to right one and replace date and most imp. replace fraction
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 1 ) where b.ticker = 'XXX' and b.ticker5 = a.name  and date < 'XXXX-XX-XX' ;

update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'ANANDRATHI' and b.ticker5 = a.name  and date < '2025-03-05' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'JINDWORLD' and b.ticker5 = a.name  and date < '2025-02-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'IGL' and b.ticker5 = a.name  and date < '2025-01-31' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'JBMA' and b.ticker5 = a.name  and date < '2025-01-31' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'JAIBALAJI' and b.ticker5 = a.name  and date < '2025-01-17' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'SHRIRAMFIN' and b.ticker5 = a.name  and date < '2025-01-10' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'ANUP' and b.ticker5 = a.name  and date < '2024-04-23' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'GARFIBRES' and b.ticker5 = a.name  and date < '2025-01-03' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 3 ) where b.ticker = 'NMDC' and b.ticker5 = a.name  and date < '2024-12-27' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 5 /  10 ) where b.ticker = 'MAZDOCK' and b.ticker5 = a.name  and date < '2024-12-27' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'WIPRO' and b.ticker5 = a.name  and date < '2024-12-03' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'RELIANCE' and b.ticker5 = a.name  and date < '2024-10-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 /  5 ) where b.ticker = 'DRREDDY' and b.ticker5 = a.name  and date < '2024-10-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 /  10 ) where b.ticker = 'HEG' and b.ticker5 = a.name  and date < '2024-10-18' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 /  2 ) where b.ticker = 'JINDALSAW' and b.ticker5 = a.name  and date < '2024-10-09' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'GPIL' and b.ticker5 = a.name  and date < '2024-10-04' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'RITES' and b.ticker5 = a.name  and date < '2024-09-20' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'PHOENIXLTD' and b.ticker5 = a.name  and date < '2024-09-20' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'KIMS' and b.ticker5 = a.name  and date < '2024-09-13' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 5 ) where b.ticker = 'VBL' and b.ticker5 = a.name  and date < '2024-09-12' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10 ) where b.ticker = 'VSTIND' and b.ticker5 = a.name  and date < '2024-09-06' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'SAPPHIRE' and b.ticker5 = a.name  and date < '2024-09-05' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'CDSL' and b.ticker5 = a.name  and date < '2024-08-23' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'KSB' and b.ticker5 = a.name  and date < '2024-07-25' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'ELECON' and b.ticker5 = a.name  and date < '2024-07-19' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3 ) where b.ticker = 'OIL' and b.ticker5 = a.name  and date < '2024-07-02' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3 ) where b.ticker = 'HINDPETRO' and b.ticker5 = a.name  and date < '2024-06-21' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'BPCL' and b.ticker5 = a.name  and date < '2024-06-21' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 1 ) where b.ticker = 'SANOFI' and b.ticker5 = a.name  and date < '2024-06-13' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 4 ) where b.ticker = 'MOTILALOFS' and b.ticker5 = a.name  and date < '2024-06-10' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 4 ) where b.ticker = 'INOXWIND' and b.ticker5 = a.name  and date < '2024-05-24' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'BDL' and b.ticker5 = a.name  and date < '2024-05-24' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5 ) where b.ticker = 'CANBK' and b.ticker5 = a.name  and date < '2024-05-15' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 5 / 10 ) where b.ticker = 'PERSISTENT' and b.ticker5 = a.name  and date < '2024-03-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'GAEL' and b.ticker5 = a.name  and date < '2024-03-15' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 4 ) where b.ticker = 'CGCL' and b.ticker5 = a.name  and date < '2024-03-05' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 3 ) where b.ticker = 'MASFIN' and b.ticker5 = a.name  and date < '2024-02-22' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 5 / 10 ) where b.ticker = 'COCHINSHIP' and b.ticker5 = a.name  and date < '2024-01-10' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'SONATSOFTW' and b.ticker5 = a.name  and date < '2023-12-12' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 4 ) where b.ticker = 'ALLCARGO' and b.ticker5 = a.name  and date < '2024-01-02' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10 ) where b.ticker = 'NESTLEIND' and b.ticker5 = a.name  and date < '2024-01-05' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'SAFARI' and b.ticker5 = a.name  and date < '2023-12-12' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 5 / 6	) where b.ticker = 'BERGEPAINT' and b.ticker5 = a.name  and date < '2023-09-22' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'HAL' and b.ticker5 = a.name  and date < '2023-09-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'JBCHEPHARM' and b.ticker5 = a.name  and date < '2023-09-18' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3	) where b.ticker = 'KANSAINER' and b.ticker5 = a.name  and date < '2023-07-04' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'INDIAMART' and b.ticker5 = a.name  and date < '2023-06-21' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'BLUESTARCO' and b.ticker5 = a.name  and date < '2023-06-20' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 5 / 10 ) where b.ticker = 'VBL' and b.ticker5 = a.name  and date < '2023-06-15' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'LODHA' and b.ticker5 = a.name  and date < '2023-05-31' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 4 ) where b.ticker = 'SPLPETRO' and b.ticker5 = a.name  and date < '2023-01-06' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'BLS' and b.ticker5 = a.name  and date < '2022-12-08' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'BLS' and b.ticker5 = a.name  and date < '2022-05-13' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10 ) where b.ticker = 'IRB' and b.ticker5 = a.name  and date < '2023-02-22' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 4 ) where b.ticker = '360ONE' and b.ticker5 = a.name  and date < '2023-03-02' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'SFL' and b.ticker5 = a.name  and date < '2022-12-21' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 8	) where b.ticker = 'EASEMYTRIP' and b.ticker5 = a.name  and date < '2022-11-21' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'EASEMYTRIP' and b.ticker5 = a.name  and date < '2022-02-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10 ) where b.ticker = 'HLEGLAS' and b.ticker5 = a.name  and date < '2022-10-18' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10 ) where b.ticker = 'BAJAJFINSV' and b.ticker5 = a.name  and date < '2022-09-13' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10 ) where b.ticker = 'TATASTEEL' and b.ticker5 = a.name  and date < '2022-07-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 5	) where b.ticker = 'JBMA' and b.ticker5 = a.name  and date < '2022-02-21' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 6	) where b.ticker = 'NYKAA' and b.ticker5 = a.name  and date < '2022-11-10' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3	) where b.ticker = 'MOTHERSON' and b.ticker5 = a.name  and date < '2022-10-03' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 3	) where b.ticker = 'BEL' and b.ticker5 = a.name  and date < '2022-09-15' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3	) where b.ticker = 'GAIL' and b.ticker5 = a.name  and date < '2022-09-06' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 3	) where b.ticker = 'GMMPFAUDLR' and b.ticker5 = a.name  and date < '2022-07-11' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'TORNTPHARM' and b.ticker5 = a.name  and date < '2022-07-08' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3 ) where b.ticker = 'IOC' and b.ticker5 = a.name  and date < '2022-06-30' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3 ) where b.ticker = 'RATNAMANI' and b.ticker5 = a.name  and date < '2022-06-30' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3 ) where b.ticker = 'NAZARA' and b.ticker5 = a.name  and date < '2022-06-24' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 1 ) where b.ticker = 'AJANTPHARM' and b.ticker5 = a.name  and date < '2022-06-22' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 1 ) where b.ticker = 'AUBANK' and b.ticker5 = a.name  and date < '2022-06-09' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3 ) where b.ticker = 'VBL' and b.ticker5 = a.name  and date < '2022-06-06' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10 ) where b.ticker = 'SAREGAMA' and b.ticker5 = a.name  and date < '2022-04-26' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10 ) where b.ticker = 'JUBLFOOD' and b.ticker5 = a.name  and date < '2022-04-19' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 3 / 5 ) where b.ticker = 'BCG' and b.ticker5 = a.name  and date < '2022-03-15' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'HGS' and b.ticker5 = a.name  and date < '2022-02-22' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'PCBL' and b.ticker5 = a.name  and date < '2022-04-11' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10) where b.ticker = 'VTL' and b.ticker5 = a.name  and date < '2022-03-24' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 3) where b.ticker = 'BSE' and b.ticker5 = a.name  and date < '2022-03-21' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2) where b.ticker = 'INFIBEAM' and b.ticker5 = a.name  and date < '2022-03-14' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10) where b.ticker = 'SCHAEFFLER' and b.ticker5 = a.name  and date < '2022-02-08' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2) where b.ticker = 'IPCALAB' and b.ticker5 = a.name  and date < '2022-01-10' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'REDINGTON' and b.ticker5 = a.name  and date < '2021-08-18' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 3	) where b.ticker = 'MAHLIFE' and b.ticker5 = a.name  and date < '2021-09-14' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'APLAPOLLO' and b.ticker5 = a.name  and date < '2021-09-16' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10	) where b.ticker = 'CESC' and b.ticker5 = a.name  and date < '2021-09-17' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5	) where b.ticker = 'KPRMILL' and b.ticker5 = a.name  and date < '2021-09-24' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10	) where b.ticker = 'AFFLE' and b.ticker5 = a.name  and date < '2021-10-07' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5	) where b.ticker = 'SRF' and b.ticker5 = a.name  and date < '2021-10-13' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10	) where b.ticker = 'IRCTC' and b.ticker5 = a.name  and date < '2021-10-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10	) where b.ticker = 'TTKPRESTIG' and b.ticker5 = a.name  and date < '2021-12-14' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 3	) where b.ticker = 'IEX' and b.ticker5 = a.name  and date < '2021-12-03' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'INFIBEAM' and b.ticker5 = a.name  and date < '2021-03-18' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'KNRCON' and b.ticker5 = a.name  and date < '2021-02-03' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'VALIANTORG' and b.ticker5 = a.name  and date < '2020-12-24' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 3 / 4	) where b.ticker = 'ASTRAL' and b.ticker5 = a.name  and date < '2021-03-18' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5	) where b.ticker = 'FINPIPE' and b.ticker5 = a.name  and date < '2021-04-15' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5	) where b.ticker = 'VAIBHAVGBL' and b.ticker5 = a.name  and date < '2021-05-07' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 5	) where b.ticker = 'ALKYLAMINE' and b.ticker5 = a.name  and date < '2021-05-11' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'IRCON' and b.ticker5 = a.name  and date < '2021-05-20' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'REDINGTON' and b.ticker5 = a.name  and date < '2021-08-18' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3	) where b.ticker = 'VBL' and b.ticker5 = a.name  and date < '2021-06-10';
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'AARTIIND' and b.ticker5 = a.name  and date < '2021-06-22' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 5	) where b.ticker = 'DIXON'	 and b.ticker5 = a.name  and date < '2021-03-18' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10	) where b.ticker = 'APLAPOLLO'	 and b.ticker5 = a.name  and date < '2020-12-15' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10	) where b.ticker = 'LAURUSLABS'	 and b.ticker5 = a.name  and date < '2020-09-29' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2	) where b.ticker = 'ELGIEQUIP'	 and b.ticker5 = a.name  and date < '2020-09-24' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10 ) where b.ticker = 'EICHERMOT'  and b.ticker5 = a.name  and date < '2020-08-24';
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 10 ) where b.ticker = 'IRCON'  and b.ticker5 = a.name  and date < '2020-04-03';
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'VINATIORGA' and b.ticker5 = a.name  and date < '2020-02-05' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3 ) where b.ticker = 'BALMLAWRIE' and b.ticker5 = a.name  and date < '2019-12-26';
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 10 ) where b.ticker = 'TRIDENT'  and b.ticker5 = a.name  and date < '2019-12-13' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'HCLTECH' and b.ticker5 = a.name  and date < '2019-12-05' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'AARTIIND' and b.ticker5 = a.name  and date < '2019-09-27' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'HDFCBANK' and b.ticker5 = a.name  and date < '2019-09-19' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 4 / 5 ) where b.ticker = 'ASTRAL' and b.ticker5 = a.name  and date < '2019-09-16' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 3 ) where b.ticker = 'BRIGADE' and b.ticker5 = a.name  and date < '2019-08-28' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'BHAGERIA'  and b.ticker5 = a.name  and date < '2019-07-17';
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'SUMIT'  and b.ticker5 = a.name  and date < '2019-07-17';
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'GAIL'  and b.ticker5 = a.name  and date < '2019-07-09' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 2 / 5 ) where b.ticker = 'APCOTEXIND' and b.ticker5 = a.name  and date < '2019-07-04' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 5 / 10 ) where b.ticker = '509887' and b.ticker5 = a.name and date < '2019-07-03' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'AVADHSUGAR'  and b.ticker5 = a.name  and date < '2019-06-27';
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 3 / 5 ) where b.ticker = 'MITTAL'  and b.ticker5 = a.name  and date < '2019-06-20' ;
update daily_data_s a, stock_universe b set a.cmp = a.cmp * ( 1 / 2 ) where b.ticker = 'CREATIVE'  and b.ticker5 = a.name  and date < '2019-06-25' ;


-- update stock valuaiton
update stock_valuation a set a.price = a.price * (1 / 1), min_fair_price = min_fair_price * (1 / 1),  max_fair_price = max_fair_price * (1 / 1) where a.ticker = 'BLUESTARCO'; 

-- update analyst reco
update stock_analyst_reco a set a.cmp = a.cmp * (1 / 1), target = target * (1 / 1) where a.ticker = 'BLUESTARCO'; 

*/
